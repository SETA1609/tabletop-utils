name: PR Linting and Quality Checks

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: "3.13.3"

    steps:
    - uses: actions/checkout@v4

    - name: Configure pyenv ${{ env.PYTHON_VERSION }}
      shell: bash
      run: |
        export PYENV_ROOT="$HOME/.pyenv"
        echo "PYENV_ROOT=$PYENV_ROOT" >> "$GITHUB_ENV"
        echo "$PYENV_ROOT/bin" >> "$GITHUB_PATH"
        echo "$PYENV_ROOT/shims" >> "$GITHUB_PATH"
        eval "$(pyenv init -)"
        pyenv install -s "$PYTHON_VERSION"
        pyenv local "$PYTHON_VERSION"
        python --version

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-dev gettext

    - name: Install Python dependencies with Pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv sync --dev

    - name: Check Django setup
      run: |
        pipenv run python manage.py check
        pipenv run python manage.py makemigrations --check --dry-run

    - name: Verify translations
      run: |
        pipenv run django-admin compilemessages
        for po in locale/*/LC_MESSAGES/django.po; do
          missing=$(msgattrib --untranslated --no-obsolete "$po" | grep 'msgid' || true)
          if [ -n "$missing" ]; then
            echo "::error::Missing translations in $po"
            msgattrib --untranslated --no-obsolete "$po"
            exit 1
          fi
        done

    - name: Run linting with flake8
      run: |
        pipenv run flake8 core/ initiative_tracker/ tabletop_utils/ manage.py

    - name: Check code formatting with black
      run: |
        pipenv run black --check .

    - name: Check import sorting with isort
      run: |
        pipenv run isort --check-only .

    - name: Run type checking with mypy
      run: |
        pipenv run mypy core/ initiative_tracker/ tabletop_utils/

    - name: Run Django tests
      run: |
        pipenv run python manage.py test